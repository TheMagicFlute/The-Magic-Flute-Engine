<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlasma_floatLight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cam[0] = (view_xview[0] + (view_wview[0] / 2))
cam[1] = (view_yview[0] + (view_hview[0] / 2))
cam[2] = 200
event_user(1)
x = (view_xview[0] + random(view_wview[0]))
y = (view_yview[0] + random(view_hview[0]))
event_user(0)
image_alpha = 0.35
image_blend = make_color_rgb((150 + random(105)), (150 + random(105)), (150 + random(105)))

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angle += 1
if (angle &gt;= 360)
    angle -= 360
xpos += sin(degtorad(angle))
ypos += yspeed
cam[0] = (view_xview[0] + objPlasma_followCam.hw)
cam[1] = (view_yview[0] + objPlasma_followCam.hh)
dx = (xpos - cam[0])
dy = (ypos - cam[1])
if ((x + sprite_width) &lt; view_xview[0])
{
    event_user(1)
    x = ((view_xview[0] + view_wview[0]) + (sprite_width / 2))
    y = (view_yview[0] + random(view_hview[0]))
    event_user(0)
}
if ((x - sprite_width) &gt; (view_xview[0] + view_wview[0]))
{
    event_user(1)
    x = (view_xview[0] - (sprite_width / 2))
    y = (view_yview[0] + random(view_hview[0]))
    event_user(0)
}
if ((y + sprite_height) &lt; view_yview[0])
{
    event_user(1)
    x = (view_xview[0] + random(view_wview[0]))
    y = ((view_yview[0] + view_hview[0]) + (sprite_height / 2))
    event_user(0)
}
if ((y - sprite_height) &gt; (view_yview[0] + view_hview[0]))
{
    event_user(1)
    x = (view_xview[0] + random(view_wview[0]))
    y = (view_yview[0] - (sprite_height / 2))
    event_user(0)
}
x = (cam[0] - ((cam[2] / dz) * dx))
y = (cam[1] - ((cam[2] / dz) * dy))

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>do
{
    depth = random_range(-140, 4000)
} until (depth &gt; 30 || depth &lt; -30);
image_xscale = (cam[2] / (cam[2] + depth))
image_yscale = image_xscale

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xpos = ((((-x) + cam[0]) / (cam[2] / ((-depth) - cam[2]))) + cam[0])
ypos = ((((-y) + cam[1]) / (cam[2] / ((-depth) - cam[2]))) + cam[1])
dx = (xpos - cam[0])
dy = (ypos - cam[1])
dz = ((-depth) - cam[2])
yspeed = random_range(-3, -4)
angle = random(360)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_add)
draw_self()
draw_set_blend_mode(bm_normal)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
