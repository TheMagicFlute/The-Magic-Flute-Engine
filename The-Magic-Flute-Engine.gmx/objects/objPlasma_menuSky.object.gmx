<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var starscale;
repeat (85)
    instance_create(random_range(-1700, 2500), random_range(-946, 1554), objPlasma_floatLight)
for (i = 0; i &lt; 4; i += 1)
{
    starSurface[i] = surface_create(view_wview[0], view_hview[0])
    star_visAngle[i] = random(360)
    surface_set_target(starSurface[i])
    draw_set_color(c_white)
    draw_set_blend_mode(bm_subtract)
    draw_rectangle(0, 0, view_wview[0], view_hview[0], false)
    draw_set_blend_mode(bm_normal)
    repeat (468)
    {
        starscale = (random(0.05) + 0.1)
        draw_sprite_ext(sprPlasma_star, irandom(3), random_range(-8, 808), random_range(-8, 616), starscale, starscale, random(360), c_white, (random(0.5) + 0.5))
    }
    surface_reset_target()
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; 4; i += 1)
{
    if surface_exists(starSurface[i])
        surface_free(starSurface[i])
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; 4; i += 1)
{
    star_visAngle[i] += irandom(8)
    if (star_visAngle[i] &gt; 360)
        star_visAngle[i] -= 360
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; 4; i += 1)
{
    if surface_exists(starSurface[i])
        surface_free(starSurface[i])
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; 4; i += 1)
{
    if surface_exists(starSurface[i])
        surface_free(starSurface[i])
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var starscale;
draw_sprite_stretched(sprPlasma_CornSkyBg, 0, view_xview[0], view_yview[0], 800, 608)
for (i = 0; i &lt; 4; i += 1)
{
    if (!surface_exists(starSurface[i]))
    {
        starSurface[i] = surface_create(view_wview[0], view_hview[0])
        star_visAngle[i] = random(360)
        surface_set_target(starSurface[i])
        draw_set_color(c_white)
        draw_set_blend_mode(bm_subtract)
        draw_rectangle(0, 0, view_wview[0], view_hview[0], false)
        draw_set_blend_mode(bm_normal)
        repeat (468)
        {
            starscale = (random(0.05) + 0.1)
            draw_sprite_ext(sprPlasma_star, irandom(3), random_range(-8, 808), random_range(-8, 616), starscale, starscale, random(360), c_white, (random(0.5) + 0.5))
        }
        surface_reset_target()
    }
    draw_surface_ext(starSurface[i], view_xview[0], view_yview[0], 1, 1, 0, c_white, (0.5 + (abs(sin(degtorad(star_visAngle[i]))) / 2)))
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
