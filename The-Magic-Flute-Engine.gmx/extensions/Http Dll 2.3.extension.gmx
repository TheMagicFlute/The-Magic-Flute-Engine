<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>Http Dll 2.3</name>
  <version>2.3.6</version>
  <packageID></packageID>
  <ProductID></ProductID>
  <date>4/25/2015</date>
  <license>Free to use, also for commercial games.</license>
  <description>HTTP requests, sockets, buffers, md5, sha-1, zlib, RC4, base64.</description>
  <helpfile></helpfile>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <androidmanifestinject></androidmanifestinject>
  <iosplistinject></iosplistinject>
  <androidactivityinject></androidactivityinject>
  <gradleinject></gradleinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <ConfigOptions>
    <Config name="Default">
      <CopyToMask>9223372036854775807</CopyToMask>
    </Config>
  </ConfigOptions>
  <androidPermissions/>
  <IncludedResources/>
  <files>
    <file>
      <filename>http_dll_2_3.dll</filename>
      <origname>Z:\static\maarten\semibackup\win-documents\gm\tutorials &amp; examples\http_dll_2\http-dll-2-3\gm\http_dll_2_3.dll</origname>
      <init></init>
      <final></final>
      <kind>1</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>hbuffer_create</name>
          <externalName>buffer_create</externalName>
          <kind>12</kind>
          <help>hbuffer_create()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>hbuffer_destroy</name>
          <externalName>buffer_destroy</externalName>
          <kind>12</kind>
          <help>hbuffer_destroy(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_exists</name>
          <externalName>buffer_exists</externalName>
          <kind>12</kind>
          <help>hbuffer_exists(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_to_string</name>
          <externalName>buffer_to_string</externalName>
          <kind>12</kind>
          <help>hbuffer_to_string(id)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_get_pos</name>
          <externalName>buffer_get_pos</externalName>
          <kind>12</kind>
          <help>hbuffer_get_pos(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_get_length</name>
          <externalName>buffer_get_length</externalName>
          <kind>12</kind>
          <help>hbuffer_get_length(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_at_end</name>
          <externalName>buffer_at_end</externalName>
          <kind>12</kind>
          <help>hbuffer_at_end(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_get_error</name>
          <externalName>buffer_get_error</externalName>
          <kind>12</kind>
          <help>hbuffer_get_error(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_clear_error</name>
          <externalName>buffer_clear_error</externalName>
          <kind>12</kind>
          <help>hbuffer_clear_error(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_clear</name>
          <externalName>buffer_clear</externalName>
          <kind>12</kind>
          <help>hbuffer_clear(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_set_pos</name>
          <externalName>buffer_set_pos</externalName>
          <kind>12</kind>
          <help>hbuffer_set_pos(id,pos)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_from_file</name>
          <externalName>buffer_read_from_file</externalName>
          <kind>12</kind>
          <help>hbuffer_read_from_file(id,filename)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_from_file_part</name>
          <externalName>buffer_read_from_file_part</externalName>
          <kind>12</kind>
          <help>hbuffer_read_from_file_part(id,filename,pos,len)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_to_file</name>
          <externalName>buffer_write_to_file</externalName>
          <kind>12</kind>
          <help>hbuffer_write_to_file(id,filename)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_append_to_file</name>
          <externalName>buffer_append_to_file</externalName>
          <kind>12</kind>
          <help>hbuffer_append_to_file(id,filename)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_rc4_crypt</name>
          <externalName>buffer_rc4_crypt</externalName>
          <kind>12</kind>
          <help>hbuffer_rc4_crypt(id,key)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_rc4_crypt_buffer</name>
          <externalName>buffer_rc4_crypt_buffer</externalName>
          <kind>12</kind>
          <help>hbuffer_rc4_crypt_buffer(id,id2)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_zlib_compress</name>
          <externalName>buffer_zlib_compress</externalName>
          <kind>12</kind>
          <help>hbuffer_zlib_compress(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_zlib_uncompress</name>
          <externalName>buffer_zlib_uncompress</externalName>
          <kind>12</kind>
          <help>hbuffer_zlib_uncompress(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_int8</name>
          <externalName>buffer_read_int8</externalName>
          <kind>12</kind>
          <help>hbuffer_read_int8(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_uint8</name>
          <externalName>buffer_read_uint8</externalName>
          <kind>12</kind>
          <help>hbuffer_read_uint8(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_int16</name>
          <externalName>buffer_read_int16</externalName>
          <kind>12</kind>
          <help>hbuffer_read_int16(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_uint16</name>
          <externalName>buffer_read_uint16</externalName>
          <kind>12</kind>
          <help>hbuffer_read_uint16(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_int32</name>
          <externalName>buffer_read_int32</externalName>
          <kind>12</kind>
          <help>hbuffer_read_int32(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_uint32</name>
          <externalName>buffer_read_uint32</externalName>
          <kind>12</kind>
          <help>hbuffer_read_uint32(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_int64</name>
          <externalName>buffer_read_int64</externalName>
          <kind>12</kind>
          <help>hbuffer_read_int64(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_uint64</name>
          <externalName>buffer_read_uint64</externalName>
          <kind>12</kind>
          <help>hbuffer_read_uint64(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_intv</name>
          <externalName>buffer_read_intv</externalName>
          <kind>12</kind>
          <help>hbuffer_read_intv(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_uintv</name>
          <externalName>buffer_read_uintv</externalName>
          <kind>12</kind>
          <help>hbuffer_read_uintv(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_float32</name>
          <externalName>buffer_read_float32</externalName>
          <kind>12</kind>
          <help>hbuffer_read_float32(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_float64</name>
          <externalName>buffer_read_float64</externalName>
          <kind>12</kind>
          <help>hbuffer_read_float64(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_int8</name>
          <externalName>buffer_write_int8</externalName>
          <kind>12</kind>
          <help>hbuffer_write_int8(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_uint8</name>
          <externalName>buffer_write_uint8</externalName>
          <kind>12</kind>
          <help>hbuffer_write_uint8(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_int16</name>
          <externalName>buffer_write_int16</externalName>
          <kind>12</kind>
          <help>hbuffer_write_int16(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_uint16</name>
          <externalName>buffer_write_uint16</externalName>
          <kind>12</kind>
          <help>hbuffer_write_uint16(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_int32</name>
          <externalName>buffer_write_int32</externalName>
          <kind>12</kind>
          <help>hbuffer_write_int32(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_uint32</name>
          <externalName>buffer_write_uint32</externalName>
          <kind>12</kind>
          <help>hbuffer_write_uint32(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_int64</name>
          <externalName>buffer_write_int64</externalName>
          <kind>12</kind>
          <help>hbuffer_write_int64(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_uint64</name>
          <externalName>buffer_write_uint64</externalName>
          <kind>12</kind>
          <help>hbuffer_write_uint64(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_intv</name>
          <externalName>buffer_write_intv</externalName>
          <kind>12</kind>
          <help>hbuffer_write_intv(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_uintv</name>
          <externalName>buffer_write_uintv</externalName>
          <kind>12</kind>
          <help>hbuffer_write_uintv(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_float32</name>
          <externalName>buffer_write_float32</externalName>
          <kind>12</kind>
          <help>hbuffer_write_float32(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_float64</name>
          <externalName>buffer_write_float64</externalName>
          <kind>12</kind>
          <help>hbuffer_write_float64(id,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_string</name>
          <externalName>buffer_read_string</externalName>
          <kind>12</kind>
          <help>hbuffer_read_string(id)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_string</name>
          <externalName>buffer_write_string</externalName>
          <kind>12</kind>
          <help>hbuffer_write_string(id,string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_data</name>
          <externalName>buffer_read_data</externalName>
          <kind>12</kind>
          <help>hbuffer_read_data(id,len)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_data</name>
          <externalName>buffer_write_data</externalName>
          <kind>12</kind>
          <help>hbuffer_write_data(id,string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_read_hex</name>
          <externalName>buffer_read_hex</externalName>
          <kind>12</kind>
          <help>hbuffer_read_hex(id,len)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_hex</name>
          <externalName>buffer_write_hex</externalName>
          <kind>12</kind>
          <help>hbuffer_write_hex(id,string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_buffer</name>
          <externalName>buffer_write_buffer</externalName>
          <kind>12</kind>
          <help>hbuffer_write_buffer(id,id2)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hbuffer_write_buffer_part</name>
          <externalName>buffer_write_buffer_part</externalName>
          <kind>12</kind>
          <help>hbuffer_write_buffer_part(id,id2,pos,len)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>md5_begin</name>
          <externalName>md5_begin</externalName>
          <kind>12</kind>
          <help>md5_begin()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>md5_end</name>
          <externalName>md5_end</externalName>
          <kind>12</kind>
          <help>md5_end()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>md5_read_file</name>
          <externalName>md5_read_file</externalName>
          <kind>12</kind>
          <help>md5_read_file(filename)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>md5_read_string</name>
          <externalName>md5_read_string</externalName>
          <kind>12</kind>
          <help>md5_read_string(string)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>md5_read_buffer</name>
          <externalName>md5_read_buffer</externalName>
          <kind>12</kind>
          <help>md5_read_buffer(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>md5_read_buffer_part</name>
          <externalName>md5_read_buffer_part</externalName>
          <kind>12</kind>
          <help>md5_read_buffer_part(id,pos,len)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>md5_result</name>
          <externalName>md5_result</externalName>
          <kind>12</kind>
          <help>md5_result()</help>
          <returnType>1</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>sha1_begin</name>
          <externalName>sha1_begin</externalName>
          <kind>12</kind>
          <help>sha1_begin()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>sha1_end</name>
          <externalName>sha1_end</externalName>
          <kind>12</kind>
          <help>sha1_end()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>sha1_read_file</name>
          <externalName>sha1_read_file</externalName>
          <kind>12</kind>
          <help>sha1_read_file(filename)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>sha1_read_string</name>
          <externalName>sha1_read_string</externalName>
          <kind>12</kind>
          <help>sha1_read_string(string)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>sha1_read_buffer</name>
          <externalName>sha1_read_buffer</externalName>
          <kind>12</kind>
          <help>sha1_read_buffer(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sha1_read_buffer_part</name>
          <externalName>sha1_read_buffer_part</externalName>
          <kind>12</kind>
          <help>sha1_read_buffer_part(id,pos,len)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sha1_result</name>
          <externalName>sha1_result</externalName>
          <kind>12</kind>
          <help>sha1_result()</help>
          <returnType>1</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>listeningsocket_create</name>
          <externalName>listeningsocket_create</externalName>
          <kind>12</kind>
          <help>listeningsocket_create()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>listeningsocket_destroy</name>
          <externalName>listeningsocket_destroy</externalName>
          <kind>12</kind>
          <help>listeningsocket_destroy(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>listeningsocket_exists</name>
          <externalName>listeningsocket_exists</externalName>
          <kind>12</kind>
          <help>listeningsocket_exists(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>listeningsocket_is_listening</name>
          <externalName>listeningsocket_is_listening</externalName>
          <kind>12</kind>
          <help>listeningsocket_is_listening(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>listeningsocket_start_listening</name>
          <externalName>listeningsocket_start_listening</externalName>
          <kind>12</kind>
          <help>listeningsocket_start_listening(id,ipv6,port,local)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>listeningsocket_stop_listening</name>
          <externalName>listeningsocket_stop_listening</externalName>
          <kind>12</kind>
          <help>listeningsocket_stop_listening(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>listeningsocket_can_accept</name>
          <externalName>listeningsocket_can_accept</externalName>
          <kind>12</kind>
          <help>listeningsocket_can_accept(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>listeningsocket_accept</name>
          <externalName>listeningsocket_accept</externalName>
          <kind>12</kind>
          <help>listeningsocket_accept(id,socket_id)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_create</name>
          <externalName>socket_create</externalName>
          <kind>12</kind>
          <help>socket_create()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>socket_destroy</name>
          <externalName>socket_destroy</externalName>
          <kind>12</kind>
          <help>socket_destroy(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_exists</name>
          <externalName>socket_exists</externalName>
          <kind>12</kind>
          <help>socket_exists(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_get_state</name>
          <externalName>socket_get_state</externalName>
          <kind>12</kind>
          <help>socket_get_state(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_reset</name>
          <externalName>socket_reset</externalName>
          <kind>12</kind>
          <help>socket_reset(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_connect</name>
          <externalName>socket_connect</externalName>
          <kind>12</kind>
          <help>socket_connect(id,address,port)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_update_read</name>
          <externalName>socket_update_read</externalName>
          <kind>12</kind>
          <help>socket_update_read(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_update_write</name>
          <externalName>socket_update_write</externalName>
          <kind>12</kind>
          <help>socket_update_write(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_shut_down</name>
          <externalName>socket_shut_down</externalName>
          <kind>12</kind>
          <help>socket_shut_down(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_get_peer_address</name>
          <externalName>socket_get_peer_address</externalName>
          <kind>12</kind>
          <help>socket_get_peer_address(id)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_read_data</name>
          <externalName>socket_read_data</externalName>
          <kind>12</kind>
          <help>socket_read_data(id,buffer_id,bytes)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_write_data</name>
          <externalName>socket_write_data</externalName>
          <kind>12</kind>
          <help>socket_write_data(id,buffer_id)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_read_message</name>
          <externalName>socket_read_message</externalName>
          <kind>12</kind>
          <help>socket_read_message(id,buffer_id)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_write_message</name>
          <externalName>socket_write_message</externalName>
          <kind>12</kind>
          <help>socket_write_message(id,buffer_id)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_read_message_delimiter</name>
          <externalName>socket_read_message_delimiter</externalName>
          <kind>12</kind>
          <help>socket_read_message_delimiter(id,buffer_id,delimiter)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>socket_write_message_delimiter</name>
          <externalName>socket_write_message_delimiter</externalName>
          <kind>12</kind>
          <help>socket_write_message_delimiter(id,buffer_id,delimiter)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>socket_get_read_data_length</name>
          <externalName>socket_get_read_data_length</externalName>
          <kind>12</kind>
          <help>socket_get_read_data_length(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_get_write_data_length</name>
          <externalName>socket_get_write_data_length</externalName>
          <kind>12</kind>
          <help>socket_get_write_data_length(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_create</name>
          <externalName>udpsocket_create</externalName>
          <kind>12</kind>
          <help>udpsocket_create()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>udpsocket_destroy</name>
          <externalName>udpsocket_destroy</externalName>
          <kind>12</kind>
          <help>udpsocket_destroy(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_exists</name>
          <externalName>udpsocket_exists</externalName>
          <kind>12</kind>
          <help>udpsocket_exists(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_get_state</name>
          <externalName>udpsocket_get_state</externalName>
          <kind>12</kind>
          <help>udpsocket_get_state(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_reset</name>
          <externalName>udpsocket_reset</externalName>
          <kind>12</kind>
          <help>udpsocket_reset(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_start</name>
          <externalName>udpsocket_start</externalName>
          <kind>12</kind>
          <help>udpsocket_start(id,ipv6,port)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_set_destination</name>
          <externalName>udpsocket_set_destination</externalName>
          <kind>12</kind>
          <help>udpsocket_set_destination(id,address,port)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_receive</name>
          <externalName>udpsocket_receive</externalName>
          <kind>12</kind>
          <help>udpsocket_receive(id,buffer_id)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_send</name>
          <externalName>udpsocket_send</externalName>
          <kind>12</kind>
          <help>udpsocket_send(id,buffer_id)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_get_last_address</name>
          <externalName>udpsocket_get_last_address</externalName>
          <kind>12</kind>
          <help>udpsocket_get_last_address(id)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_get_last_port</name>
          <externalName>udpsocket_get_last_port</externalName>
          <kind>12</kind>
          <help>udpsocket_get_last_port(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpsocket_get_max_message_size</name>
          <externalName>udpsocket_get_max_message_size</externalName>
          <kind>12</kind>
          <help>udpsocket_get_max_message_size(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_create</name>
          <externalName>httprequest_create</externalName>
          <kind>12</kind>
          <help>httprequest_create()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>httprequest_destroy</name>
          <externalName>httprequest_destroy</externalName>
          <kind>12</kind>
          <help>httprequest_destroy(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_exists</name>
          <externalName>httprequest_exists</externalName>
          <kind>12</kind>
          <help>httprequest_exists(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_get_state</name>
          <externalName>httprequest_get_state</externalName>
          <kind>12</kind>
          <help>httprequest_get_state(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_set_request_header</name>
          <externalName>httprequest_set_request_header</externalName>
          <kind>12</kind>
          <help>httprequest_set_request_header(id,name,value,replace)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_remove_request_header</name>
          <externalName>httprequest_remove_request_header</externalName>
          <kind>12</kind>
          <help>httprequest_remove_request_header(id,name)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>httprequest_clear_request_headers</name>
          <externalName>httprequest_clear_request_headers</externalName>
          <kind>12</kind>
          <help>httprequest_clear_request_headers(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_set_post_parameter</name>
          <externalName>httprequest_set_post_parameter</externalName>
          <kind>12</kind>
          <help>httprequest_set_post_parameter(id,name,value)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>httprequest_set_post_parameter_file</name>
          <externalName>httprequest_set_post_parameter_file</externalName>
          <kind>12</kind>
          <help>httprequest_set_post_parameter_file(id,name,filename,buffer_id)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_remove_post_parameter</name>
          <externalName>httprequest_remove_post_parameter</externalName>
          <kind>12</kind>
          <help>httprequest_remove_post_parameter(id,name)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>httprequest_clear_post_parameters</name>
          <externalName>httprequest_clear_post_parameters</externalName>
          <kind>12</kind>
          <help>httprequest_clear_post_parameters(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_reset</name>
          <externalName>httprequest_reset</externalName>
          <kind>12</kind>
          <help>httprequest_reset(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_connect</name>
          <externalName>httprequest_connect</externalName>
          <kind>12</kind>
          <help>httprequest_connect(id,url,post)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_update</name>
          <externalName>httprequest_update</externalName>
          <kind>12</kind>
          <help>httprequest_update(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_get_status_code</name>
          <externalName>httprequest_get_status_code</externalName>
          <kind>12</kind>
          <help>httprequest_get_status_code(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_get_response_header_count</name>
          <externalName>httprequest_get_response_header_count</externalName>
          <kind>12</kind>
          <help>httprequest_get_response_header_count(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_get_response_header_name</name>
          <externalName>httprequest_get_response_header_name</externalName>
          <kind>12</kind>
          <help>httprequest_get_response_header_name(id,index)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_get_response_header_value</name>
          <externalName>httprequest_get_response_header_value</externalName>
          <kind>12</kind>
          <help>httprequest_get_response_header_value(id,index)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_find_response_header</name>
          <externalName>httprequest_find_response_header</externalName>
          <kind>12</kind>
          <help>httprequest_find_response_header(id,name)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>httprequest_get_message_body</name>
          <externalName>httprequest_get_message_body</externalName>
          <kind>12</kind>
          <help>httprequest_get_message_body(id)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_get_message_body_length</name>
          <externalName>httprequest_get_message_body_length</externalName>
          <kind>12</kind>
          <help>httprequest_get_message_body_length(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_get_message_body_buffer</name>
          <externalName>httprequest_get_message_body_buffer</externalName>
          <kind>12</kind>
          <help>httprequest_get_message_body_buffer(id,buffer_id)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>buffer_read_base64</name>
          <externalName>buffer_read_base64</externalName>
          <kind>12</kind>
          <help>buffer_read_base64(id,len)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>buffer_write_base64</name>
          <externalName>buffer_write_base64</externalName>
          <kind>12</kind>
          <help>buffer_write_base64(id,string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>httprequest_urlencode</name>
          <externalName>httprequest_urlencode</externalName>
          <kind>12</kind>
          <help>httprequest_urlencode(string,keepspecialchars)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>httprequest_urldecode</name>
          <externalName>httprequest_urldecode</externalName>
          <kind>12</kind>
          <help>httprequest_urldecode(string)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
      </functions>
      <constants>
        <constant>
          <name>socket_state_notconnected</name>
          <value>0</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>socket_state_connecting</name>
          <value>1</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>socket_state_connected</name>
          <value>2</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>socket_state_closed</name>
          <value>4</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>socket_state_error</name>
          <value>5</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>udpsocket_state_notstarted</name>
          <value>0</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>udpsocket_state_started</name>
          <value>1</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>udpsocket_state_error</name>
          <value>2</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>httprequest_state_notconnected</name>
          <value>0</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>httprequest_state_wait_statuscode</name>
          <value>1</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>httprequest_state_wait_headers</name>
          <value>2</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>httprequest_state_wait_messagebody</name>
          <value>3</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>httprequest_state_closed</name>
          <value>4</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>httprequest_state_error</name>
          <value>5</value>
          <hidden>0</hidden>
        </constant>
      </constants>
    </file>
  </files>
</extension>
